//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SoapTest
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.parasoft.com/wsdl/store-01/", ConfigurationName="SoapTest.ICart")]
    public interface ICart
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="placeOrder", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="placeOrder", Name="exception", Namespace="http://www.themindelectric.com/exceptions/")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Item))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        System.Threading.Tasks.Task<SoapTest.Order> placeOrderAsync(int itemId, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="removeOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Item))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        System.Threading.Tasks.Task<string> removeOrderAsync(int orderNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="getItemByTitle", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="getItemByTitle", Name="exception", Namespace="http://www.themindelectric.com/exceptions/")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Item))]
        System.Threading.Tasks.Task<SoapTest.getItemByTitle2Out> getItemByTitleAsync(SoapTest.getItemByTitle2In request);
        
        [System.ServiceModel.OperationContractAttribute(Action="getItemById", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="getItemById", Name="exception", Namespace="http://www.themindelectric.com/exceptions/")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Item))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        System.Threading.Tasks.Task<SoapTest.Book> getItemByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="getPendingOrders", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Item))]
        System.Threading.Tasks.Task<SoapTest.getPendingOrders4Out> getPendingOrdersAsync(SoapTest.getPendingOrders4In request);
        
        [System.ServiceModel.OperationContractAttribute(Action="addNewItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Item))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        System.Threading.Tasks.Task<SoapTest.Book> addNewItemAsync(SoapTest.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="confirm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Item))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        System.Threading.Tasks.Task<bool> confirmAsync();
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.themindelectric.com/package/webtool.soap.examples.store/")]
    public partial class Order
    {
        
        private Book itemField;
        
        private int quantityField;
        
        private int order_numberField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=0)]
        public Book item
        {
            get
            {
                return this.itemField;
            }
            set
            {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public int quantity
        {
            get
            {
                return this.quantityField;
            }
            set
            {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public int order_number
        {
            get
            {
                return this.order_numberField;
            }
            set
            {
                this.order_numberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.themindelectric.com/package/webtool.soap.examples.store/")]
    public partial class Book : Item
    {
        
        private string isbnField;
        
        private Date publication_dateField;
        
        private string descriptionField;
        
        private string[] authorsField;
        
        private string publisherField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=0)]
        public string isbn
        {
            get
            {
                return this.isbnField;
            }
            set
            {
                this.isbnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=1)]
        public Date publication_date
        {
            get
            {
                return this.publication_dateField;
            }
            set
            {
                this.publication_dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=2)]
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=3)]
        [System.Xml.Serialization.XmlArrayItemAttribute("i", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] authors
        {
            get
            {
                return this.authorsField;
            }
            set
            {
                this.authorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=4)]
        public string publisher
        {
            get
            {
                return this.publisherField;
            }
            set
            {
                this.publisherField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.themindelectric.com/package/java.sql/")]
    public partial class Date
    {
        
        private System.DateTime valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public System.DateTime Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Book))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.themindelectric.com/package/webtool.soap.examples.store/")]
    public partial class Item
    {
        
        private int idField;
        
        private string titleField;
        
        private int quantity_in_stockField;
        
        private float priceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public int id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=1)]
        public string title
        {
            get
            {
                return this.titleField;
            }
            set
            {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public int quantity_in_stock
        {
            get
            {
                return this.quantity_in_stockField;
            }
            set
            {
                this.quantity_in_stockField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public float price
        {
            get
            {
                return this.priceField;
            }
            set
            {
                this.priceField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getItemByTitle", WrapperNamespace="http://www.parasoft.com/wsdl/store-01/", IsWrapped=true)]
    public partial class getItemByTitle2In
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.parasoft.com/wsdl/store-01/", Order=0)]
        public string titleKeyword;
        
        public getItemByTitle2In()
        {
        }
        
        public getItemByTitle2In(string titleKeyword)
        {
            this.titleKeyword = titleKeyword;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getItemByTitleResponse", WrapperNamespace="http://www.parasoft.com/wsdl/store-01/", IsWrapped=true)]
    public partial class getItemByTitle2Out
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.parasoft.com/wsdl/store-01/", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("i", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SoapTest.Book[] Result;
        
        public getItemByTitle2Out()
        {
        }
        
        public getItemByTitle2Out(SoapTest.Book[] Result)
        {
            this.Result = Result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getPendingOrders", WrapperNamespace="http://www.parasoft.com/wsdl/store-01/", IsWrapped=true)]
    public partial class getPendingOrders4In
    {
        
        public getPendingOrders4In()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getPendingOrdersResponse", WrapperNamespace="http://www.parasoft.com/wsdl/store-01/", IsWrapped=true)]
    public partial class getPendingOrders4Out
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.parasoft.com/wsdl/store-01/", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("i", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public SoapTest.Order[] Result;
        
        public getPendingOrders4Out()
        {
        }
        
        public getPendingOrders4Out(SoapTest.Order[] Result)
        {
            this.Result = Result;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public interface ICartChannel : SoapTest.ICart, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public partial class CartClient : System.ServiceModel.ClientBase<SoapTest.ICart>, SoapTest.ICart
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public CartClient() : 
                base(CartClient.GetDefaultBinding(), CartClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.ICart.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CartClient(EndpointConfiguration endpointConfiguration) : 
                base(CartClient.GetBindingForEndpoint(endpointConfiguration), CartClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CartClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(CartClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CartClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(CartClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CartClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<SoapTest.Order> placeOrderAsync(int itemId, int quantity)
        {
            return base.Channel.placeOrderAsync(itemId, quantity);
        }
        
        public System.Threading.Tasks.Task<string> removeOrderAsync(int orderNumber)
        {
            return base.Channel.removeOrderAsync(orderNumber);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SoapTest.getItemByTitle2Out> SoapTest.ICart.getItemByTitleAsync(SoapTest.getItemByTitle2In request)
        {
            return base.Channel.getItemByTitleAsync(request);
        }
        
        public System.Threading.Tasks.Task<SoapTest.getItemByTitle2Out> getItemByTitleAsync(string titleKeyword)
        {
            SoapTest.getItemByTitle2In inValue = new SoapTest.getItemByTitle2In();
            inValue.titleKeyword = titleKeyword;
            return ((SoapTest.ICart)(this)).getItemByTitleAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<SoapTest.Book> getItemByIdAsync(int id)
        {
            return base.Channel.getItemByIdAsync(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SoapTest.getPendingOrders4Out> SoapTest.ICart.getPendingOrdersAsync(SoapTest.getPendingOrders4In request)
        {
            return base.Channel.getPendingOrdersAsync(request);
        }
        
        public System.Threading.Tasks.Task<SoapTest.getPendingOrders4Out> getPendingOrdersAsync()
        {
            SoapTest.getPendingOrders4In inValue = new SoapTest.getPendingOrders4In();
            return ((SoapTest.ICart)(this)).getPendingOrdersAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<SoapTest.Book> addNewItemAsync(SoapTest.Book book)
        {
            return base.Channel.addNewItemAsync(book);
        }
        
        public System.Threading.Tasks.Task<bool> confirmAsync()
        {
            return base.Channel.confirmAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ICart))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ICart))
            {
                return new System.ServiceModel.EndpointAddress("http://ws1.parasoft.com/glue/store-01");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return CartClient.GetBindingForEndpoint(EndpointConfiguration.ICart);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return CartClient.GetEndpointAddress(EndpointConfiguration.ICart);
        }
        
        public enum EndpointConfiguration
        {
            
            ICart,
        }
    }
}
